version: "3"
services:

  outline:
    image: docker.io/outlinewiki/outline
    env_file: ./docker.env
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - storage
    networks:
      - keycloak_stack

  redis:
    image: docker.io/redis
    env_file: ./docker.env
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      - keycloak_stack



  postgres:
    image: docker.io/postgres
    env_file: ./docker.env
    user: postgres
    ports:
      - "5432:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'outline'
    networks:
      - keycloak_stack

  storage:
    image: quay.io/minio/minio
    env_file: ./docker.env
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: sh
    command: -c 'minio server --console-address ":9001" /data/minio'
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - storage-data:/data
    environment:
      MINIO_ROOT_USER: 'minio'
      MINIO_ROOT_PASSWORD: 'miniostorage'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - keycloak_stack


volumes:
  storage-data:
  database-data:

networks:
  keycloak_stack:
    external: true